[{"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/index.js":"1","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/App.js":"2","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/DeviceStore.js":"3","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/UserStore.js":"4","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/AppRouter.js":"5","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/userAPI.js":"6","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/NavBar.js":"7","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/routes.js":"8","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/index.js":"9","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/utils/consts.js":"10","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Admin.js":"11","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Auth.js":"12","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/DevicePage.js":"13","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Basket.js":"14","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Shop.js":"15","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/deviceAPI.js":"16","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceList.js":"17","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/TypeBar.js":"18","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/Pages.js":"19","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/BrandBar.js":"20","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceItem.js":"21","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateType.js":"22","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateDevice.js":"23","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateBrand.js":"24","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/index.js":"25","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/App.js":"26","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/store/UserStore.js":"27","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/store/DeviceStore.js":"28","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/AppRouter.js":"29","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/NavBar.js":"30","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/userAPI.js":"31","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/routes.js":"32","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/index.js":"33","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/utils/consts.js":"34","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/DevicePage.js":"35","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Auth.js":"36","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Shop.js":"37","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Basket.js":"38","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Admin.js":"39","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/deviceAPI.js":"40","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/Pages.js":"41","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/DeviceList.js":"42","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/BrandBar.js":"43","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/TypeBar.js":"44","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateType.js":"45","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateDevice.js":"46","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateBrand.js":"47","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/DeviceItem.js":"48"},{"size":439,"mtime":1636473457101,"results":"49","hashOfConfig":"50"},{"size":872,"mtime":1637154689423,"results":"51","hashOfConfig":"50"},{"size":1298,"mtime":1636473457105,"results":"52","hashOfConfig":"50"},{"size":401,"mtime":1636473457105,"results":"53","hashOfConfig":"50"},{"size":938,"mtime":1637155567098,"results":"54","hashOfConfig":"50"},{"size":687,"mtime":1637154282814,"results":"55","hashOfConfig":"50"},{"size":2388,"mtime":1637229546020,"results":"56","hashOfConfig":"50"},{"size":736,"mtime":1637155530068,"results":"57","hashOfConfig":"50"},{"size":407,"mtime":1636473457101,"results":"58","hashOfConfig":"50"},{"size":228,"mtime":1637228119572,"results":"59","hashOfConfig":"50"},{"size":2224,"mtime":1637223051072,"results":"60","hashOfConfig":"50"},{"size":2711,"mtime":1637246678265,"results":"61","hashOfConfig":"50"},{"size":3274,"mtime":1638185388327,"results":"62","hashOfConfig":"50"},{"size":220,"mtime":1637229480459,"results":"63","hashOfConfig":"50"},{"size":1271,"mtime":1638172429175,"results":"64","hashOfConfig":"50"},{"size":981,"mtime":1638171170901,"results":"65","hashOfConfig":"50"},{"size":484,"mtime":1637163180379,"results":"66","hashOfConfig":"50"},{"size":935,"mtime":1638171660983,"results":"67","hashOfConfig":"50"},{"size":709,"mtime":1638172574893,"results":"68","hashOfConfig":"50"},{"size":1000,"mtime":1638171692574,"results":"69","hashOfConfig":"50"},{"size":1241,"mtime":1638175322357,"results":"70","hashOfConfig":"50"},{"size":1176,"mtime":1637223050938,"results":"71","hashOfConfig":"50"},{"size":5782,"mtime":1638170039535,"results":"72","hashOfConfig":"50"},{"size":1193,"mtime":1637085139186,"results":"73","hashOfConfig":"50"},{"size":439,"mtime":1636473457101,"results":"74","hashOfConfig":"75"},{"size":872,"mtime":1637154689423,"results":"76","hashOfConfig":"75"},{"size":401,"mtime":1636473457105,"results":"77","hashOfConfig":"75"},{"size":1298,"mtime":1636473457105,"results":"78","hashOfConfig":"75"},{"size":938,"mtime":1637155567098,"results":"79","hashOfConfig":"75"},{"size":2510,"mtime":1638853291605,"results":"80","hashOfConfig":"75"},{"size":687,"mtime":1638863716491,"results":"81","hashOfConfig":"75"},{"size":736,"mtime":1637155530068,"results":"82","hashOfConfig":"75"},{"size":407,"mtime":1636473457101,"results":"83","hashOfConfig":"75"},{"size":228,"mtime":1637228119572,"results":"84","hashOfConfig":"75"},{"size":2516,"mtime":1638864382375,"results":"85","hashOfConfig":"75"},{"size":2711,"mtime":1637246678265,"results":"86","hashOfConfig":"75"},{"size":1471,"mtime":1638765243991,"results":"87","hashOfConfig":"75"},{"size":220,"mtime":1637229480459,"results":"88","hashOfConfig":"75"},{"size":2076,"mtime":1638864157088,"results":"89","hashOfConfig":"75"},{"size":981,"mtime":1638171170901,"results":"90","hashOfConfig":"75"},{"size":709,"mtime":1638172574893,"results":"91","hashOfConfig":"75"},{"size":484,"mtime":1637163180379,"results":"92","hashOfConfig":"75"},{"size":1245,"mtime":1638864521930,"results":"93","hashOfConfig":"75"},{"size":1227,"mtime":1638764826626,"results":"94","hashOfConfig":"75"},{"size":1156,"mtime":1638853650802,"results":"95","hashOfConfig":"75"},{"size":5637,"mtime":1638854694664,"results":"96","hashOfConfig":"75"},{"size":1157,"mtime":1638853662079,"results":"97","hashOfConfig":"75"},{"size":1373,"mtime":1638765888062,"results":"98","hashOfConfig":"75"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"10c0yic",{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"13545vu",{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"160"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/index.js",[],["212","213"],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/App.js",["214"],"import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      console.log(`data`, JSON.stringify(data, null, 2))\n      user.setUser(data)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/DeviceStore.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/UserStore.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/AppRouter.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/userAPI.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/NavBar.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/routes.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/index.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/utils/consts.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Admin.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Auth.js",["215"],"import React, { useContext, useState } from 'react';\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context)\n  const location = useLocation()\n  const history = useHistory()\n  const isLogin = location.pathname === LOGIN_ROUTE\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n      user.setUser(user)\n      user.setIsAuth(true)\n      history.push(SHOP_ROUTE)\n    } catch (e) {\n      alert(e.response.data.message)\n    }\n\n  }\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 400 }} className=\"p-4\">\n        <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ?\n              <div>\n              Нет аккаунта? <NavLink className=\"text-primary\" to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n              :\n              <div>\n              Есть аккаунт? <NavLink className=\"text-primary\" to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            }\n            <Button\n              variant={\"outline-success\"}\n              onClick={click}\n              className=\"mt-3\"\n            >\n              {isLogin ? 'Войти' : 'Регистрация'}\n            </Button>\n          </Row>\n\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/DevicePage.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ListGroup } from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport { useParams } from 'react-router-dom'\nimport { fetchOneDevice } from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] })\n  const { id } = useParams()\n  useEffect(() => {\n    fetchOneDevice(id).then(data => setDevice(data))\n  }, [])\n\n  return (\n    <Container className=\"mt-3\">\n      <Row\n\n      >\n        <Col\n          xl={4} md={5}\n        >\n          <Image\n            src={process.env.REACT_APP_API_URL + device.img} />\n        </Col>\n        <Col\n          xl={5} md={7}\n        >\n          <Card\n            border=\"light\"\n            className=\"d-flex flex-column p-2 h-100\"\n          >\n            <h1>{device.name} </h1>\n            <h2 className=\"text-primary\">{device.price} руб.</h2>\n            <p style={{ fontSize: '16px' }}>Осталось на складе: {device.count} шт.</p>\n            <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n        <Col xl={3} className=\"d-none d-xl-block\">\n          <div className='scubacontext mx-auto'>\n            <p className=\"text-uppercase text-center\">Scuba shop это</p>\n            <ListGroup style={{ marginTop: '25px' }}>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons1.jpg\" /></a>\n                <a href=\"#\" className=\"d-block text-dark\">Только “белое” оборудование</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons2.jpg\" /></a>\n                <a href=\"#\" className=\"d-block text-dark\">Доставка по регионам РФ</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons3.jpg\" /></a>\n                <a href=\"#\" className=\"d-block text-dark\">Покупка в кредит</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons4.jpg\" /></a>\n                <a href=\"#\" className=\"d-block text-dark\">Гарантийное обслуживание</a>\n              </ListGroup.Item>\n            </ListGroup>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"m-3\">\n        <Col md={6}>\n          <h2>Описание </h2>\n          <p style={{ fontSize: '16px' }}>{device.description} </p>\n        </Col>\n        {\n          device.info.length > 0 &&\n          <Col md={6}>\n            <h2>Характеристики</h2>\n            <ListGroup>\n              {device.info.map((info, index) =>\n                <ListGroup.Item key={info.id} style={{ padding: 10 }}>\n                  {info.title}: {info.description}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Col>\n        }\n\n      </Row>\n    </Container >\n  );\n};\n\nexport default DevicePage;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Basket.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Shop.js",["230","231","232","233"],"import React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context)\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    fetchDevices(null, null, 2, 10).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [])\n\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 4).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [device.page, device.selectedType, device.selectedBrand,])\n\n  return (\n    <Container>\n      <TypeBar />\n      <BrandBar />\n      <DeviceList />\n      <Pages />\n    </Container>\n  );\n});\n\nexport default Shop;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/deviceAPI.js",["234"],"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n  const { data } = await $authHost.post('api/type', type)\n  return data\n}\n\nexport const fetchTypes = async () => {\n  const { data } = await $host.get('api/type')\n  return data\n}\n\nexport const createBrand = async (brand) => {\n  const { data } = await $authHost.post('api/brand', brand)\n  return data\n}\n\nexport const fetchBrands = async () => {\n  const { data } = await $host.get('api/brand',)\n  return data\n}\n\nexport const createDevice = async (device) => {\n  const { data } = await $authHost.post('api/device', device)\n  return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit = 5) => {\n  const { data } = await $host.get('api/device', {\n    params: {\n      typeId, brandId, page, limit\n    }\n  })\n  return data\n}\n\nexport const fetchOneDevice = async (id) => {\n  const { data } = await $host.get('api/device/' + id)\n  return data\n}\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceList.js",["235"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport DeviceItem from \"./DeviceItem\";\n\nconst DeviceList = observer(() => {\n  const { device } = useContext(Context)\n\n  return (\n    <Row className=\"d-flex\" className=\"g-3\">\n      {device.devices.map(device =>\n        <DeviceItem key={device.id} device={device} />\n      )}\n    </Row>\n  );\n});\n\nexport default DeviceList;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/TypeBar.js",["236"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n  const { device } = useContext(Context)\n  return (\n    <ListGroup horizontal className=\"my-2\">\n      <ListGroup.Item\n        style={{ cursor: 'pointer' }}\n        active={Object.entries(device.selectedType).length === 0}\n        onClick={() => device.setSelectedType({})}\n        key={'unic'}\n      >\n        Всё\n      </ListGroup.Item>\n      {device.types.map(type =>\n        <ListGroup.Item\n          style={{ cursor: 'pointer' }}\n          active={type.id === device.selectedType.id}\n          onClick={() => device.setSelectedType(type)}\n          key={type.id}\n        >\n          {type.name}\n        </ListGroup.Item>\n      )}\n    </ListGroup>\n  );\n});\n\nexport default TypeBar;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/Pages.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/BrandBar.js",["237"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nconst BrandBar = observer(() => {\n  const { device } = useContext(Context)\n\n  return (\n    <ListGroup horizontal className=\"my-2\">\n      <ListGroup.Item\n        className=\"py-2 px-1\"\n        style={{ cursor: 'pointer' }}\n        active={Object.entries(device.selectedBrand).length === 0}\n        onClick={() => device.setSelectedBrand({})}\n        key={'unical'}\n      >\n        Все производители\n      </ListGroup.Item>\n      {device.brands.map(brand =>\n        <ListGroup.Item\n          style={{ cursor: 'pointer' }}\n          key={brand.id}\n          className=\"py-2 px-1\"\n          onClick={() => device.setSelectedBrand(brand)}\n          active={brand.id === device.selectedBrand.id}\n        >\n          {brand.name}\n        </ListGroup.Item>\n      )}\n    </ListGroup>\n  );\n});\n\nexport default BrandBar;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceItem.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateType.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateDevice.js",["238","239"],"import React, { useContext, useEffect, useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport { createDevice, fetchBrands, fetchTypes, fetchDevices } from \"../../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({ show, onHide }) => {\n  const { device } = useContext(Context)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [price, setPrice] = useState('')\n  const [count, setCount] = useState('')\n  const [file, setFile] = useState(null)\n  const [info, setInfo] = useState([])\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    console.log(`device.types: ${device.types}`)\n    console.log(`device.brands: ${device.brands}`)\n  }, [])\n\n  const addInfo = () => {\n    setInfo([...info, { title: '', description: '', number: Date.now() }])\n  }\n  const removeInfo = (number) => {\n    setInfo(info.filter(i => i.number !== number))\n  }\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\n  }\n\n  const selectFile = e => {\n    setFile(e.target.files[0])\n  }\n\n  const addDevice = () => {\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('description', description)\n    formData.append('price', `${price}`)\n    formData.append('count', `${count}`)\n    formData.append('img', file)\n    formData.append('brandId', device.selectedBrand.id)\n    formData.append('typeId', device.selectedType.id)\n    formData.append('info', JSON.stringify(info))\n    createDevice(formData).then(data => onHide())\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить снаряжение\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{device.selectedType.name || \"Укажите вид снаряжения\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.types.map(type =>\n                <Dropdown.Item\n                  className=\"text-dark\"\n                  onClick={() => device.setSelectedType(type)}\n                  key={type.id}\n                >\n                  {type.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{device.selectedBrand.name || \"Укажите производителя\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.brands.map(brand =>\n                <Dropdown.Item\n                  onClick={() => device.setSelectedBrand(brand)}\n                  key={brand.id}\n                  className=\"text-dark\"\n                >\n                  {brand.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Control\n            value={name}\n            onChange={e => setName(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Введите название снаряжения\"\n          />\n          <Form.Control\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Введите описание снаряжения\"\n          />\n          <Form.Control\n            value={price}\n            onChange={e => setPrice(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Введите стоимость снаряжения\"\n            type=\"number\"\n          />\n          <Form.Control\n            value={count}\n            onChange={e => setCount(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Введите количество данного товара в наличии\"\n            type=\"number\"\n          />\n          <Form.Control\n            className=\"mt-3\"\n            type=\"file\"\n            onChange={selectFile}\n          />\n          <hr />\n          <Button\n            variant={\"outline-dark\"}\n            onClick={addInfo}\n          >\n            Добавить новое свойство\n          </Button>\n          {info.map(i =>\n            <Row className=\"mt-4\" key={i.number}>\n              <Col md={4}>\n                <Form.Control\n                  value={i.title}\n                  onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                  placeholder=\"Введите название свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Form.Control\n                  value={i.description}\n                  onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                  placeholder=\"Введите описание свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Button\n                  onClick={() => removeInfo(i.number)}\n                  variant={\"outline-danger\"}\n                >\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          )}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n\nexport default CreateDevice;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateBrand.js",["240"],"import React, { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { createBrand, createType } from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({ show, onHide }) => {\n  const [value, setValue] = useState('')\n\n  const addBrand = () => {\n    createBrand({ name: value }).then(data => {\n      setValue('')\n      onHide()\n    })\n  }\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить производителя\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            placeholder={\"Введите производителя\"}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CreateBrand;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/index.js",[],["241","242"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/App.js",["243"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/store/UserStore.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/store/DeviceStore.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/AppRouter.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/NavBar.js",["244","245"],"import React, { useContext } from 'react';\nimport { Context } from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { NavLink } from \"react-router-dom\";\nimport { ADMIN_ROUTE, LOGIN_ROUTE, SHOP_ROUTE, BASKET_ROUTE } from \"../utils/consts\";\nimport { Button } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport { useHistory } from 'react-router-dom'\n\nimport logo from \"../assets/new_logo.png\"\nimport login from \"../assets/login_ico.png\"\n\nconst NavBar = observer(() => {\n  const { user } = useContext(Context)\n  const history = useHistory()\n\n  const logOut = () => {\n    user.setUser({})\n    user.setIsAuth(false)\n  }\n\n  console.log(`user: ${JSON.stringify(user.user.role, null, 2)}`)\n\n  return (\n    <Navbar\n      bg=\"dark\" variant=\"dark\"\n      className=\"mb-3\"\n    >\n      <Container>\n        <Navbar.Brand href=\"/\" className=\"d-flex align-items-center\">\n          <img\n            src={logo}\n            className=\"mr-2\"\n            alt=\"Logo\"\n          />\n\n          {/* <NavLink style={{ color: 'white' }} to={SHOP_ROUTE}>ScubaShop</NavLink> */}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {/* <NavLink className=\"mr-2\" to={SHOP_ROUTE}>Каталог</NavLink>\n            <NavLink className=\"mr-2\" to={BASKET_ROUTE}>Корзина</NavLink> */}\n\n          </Nav>\n        </Navbar.Collapse>\n        {user.isAuth ?\n          <Nav className=\"ml-auto\" style={{ color: 'white' }}>\n            {user.user.role === 'ADMIN' &&\n              <Button\n                onClick={() => history.push(ADMIN_ROUTE)}\n                variant={\"outline-light\"}\n              >\n                Админпанель\n              </Button>\n            }\n            <Button\n              variant={\"outline-light\"}\n              onClick={() => logOut()}\n              className=\"ml-2\"\n            >\n              Выйти\n            </Button>\n          </Nav>\n          :\n          <Nav className=\"ml-auto\" style={{ color: 'white' }}>\n            <NavLink to={LOGIN_ROUTE} className=\"d-flex justify-content-between\">\n              <img className=\"mr-2\" src={login} alt=\"auth\" />\n              <span>Войти на сайт</span>\n            </NavLink>\n          </Nav>\n\n        }\n      </Container>\n      <hr />\n    </Navbar>\n\n  );\n});\n\nexport default NavBar;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/userAPI.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/routes.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/index.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/utils/consts.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/DevicePage.js",["246","247"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Auth.js",["248"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Shop.js",["249","250"],"import React, { useContext, useEffect } from 'react';\nimport { Container, Accordion } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context)\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    fetchDevices(null, null, 2, 10).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [])\n\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 4).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [device.page, device.selectedType, device.selectedBrand,])\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col md={9}>\n          <DeviceList />\n          <Pages />\n        </Col>\n        <Col md={3}>\n          <Accordion defaultActiveKey=\"0\">\n            <BrandBar />\n            <TypeBar />\n          </Accordion>\n        </Col>\n      </Row>\n    </Container>\n  );\n});\n\nexport default Shop;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Basket.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/pages/Admin.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/http/deviceAPI.js",["251"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/Pages.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/DeviceList.js",["252"],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/BrandBar.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/TypeBar.js",["253"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Col, Accordion } from \"react-bootstrap/\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n  const { device } = useContext(Context)\n  return (\n    <Accordion.Item eventKey=\"0\">\n      <Accordion.Header>Категории игрушек</Accordion.Header>\n      <Accordion.Body className=\"p-0\">\n        <ListGroup className=\"my-2\">\n          <ListGroup.Item\n            style={{ cursor: 'pointer' }}\n            active={Object.entries(device.selectedType).length === 0}\n            onClick={() => device.setSelectedType({})}\n            key={'unic'}\n          >\n            Все игрушки\n          </ListGroup.Item>\n          {device.types.map(type =>\n            <ListGroup.Item\n              style={{ cursor: 'pointer' }}\n              active={type.id === device.selectedType.id}\n              onClick={() => device.setSelectedType(type)}\n              key={type.id}\n            >\n              {type.name}\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n});\n\nexport default TypeBar;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateType.js",[],"/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateDevice.js",["254","255","256","257"],"import React, { useContext, useEffect, useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport { createDevice, fetchBrands, fetchTypes, fetchDevices } from \"../../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({ show, onHide }) => {\n  const { device } = useContext(Context)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [price, setPrice] = useState('')\n  const [count, setCount] = useState('')\n  const [file, setFile] = useState(null)\n  const [info, setInfo] = useState([])\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    console.log(`device.types: ${device.types}`)\n    console.log(`device.brands: ${device.brands}`)\n  }, [])\n\n  const addInfo = () => {\n    setInfo([...info, { title: '', description: '', number: Date.now() }])\n  }\n  const removeInfo = (number) => {\n    setInfo(info.filter(i => i.number !== number))\n  }\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\n  }\n\n  const selectFile = e => {\n    setFile(e.target.files[0])\n  }\n\n  const addDevice = () => {\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('description', description)\n    formData.append('price', `${price}`)\n    formData.append('count', `${10}`)\n    formData.append('img', file)\n    formData.append('brandId', device.selectedBrand.id)\n    formData.append('typeId', device.selectedType.id)\n    formData.append('info', JSON.stringify(info))\n    createDevice(formData).then(data => onHide())\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить товар\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            className=\"mt-3\"\n            type=\"file\"\n            onChange={selectFile}\n          />\n          <Form.Control\n            value={name}\n            onChange={e => setName(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Название игрушки\"\n          />\n          <Form.Control\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            className=\"mt-3\"\n            placeholder=\"Описание игрушки\"\n          />\n          <Form.Control\n            value={price}\n            onChange={e => setPrice(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Стоимость игрушки\"\n            type=\"number\"\n          />\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{device.selectedType.name || \"КАТЕГОРИЯ\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.types.map(type =>\n                <Dropdown.Item\n                  className=\"text-dark\"\n                  onClick={() => device.setSelectedType(type)}\n                  key={type.id}\n                >\n                  {type.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mt-2 mb-2\">\n            <Dropdown.Toggle>{device.selectedBrand.name || \"ФИРМА\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.brands.map(brand =>\n                <Dropdown.Item\n                  onClick={() => device.setSelectedBrand(brand)}\n                  key={brand.id}\n                  className=\"text-dark\"\n                >\n                  {brand.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n          {/* <Form.Control\n            value={count}\n            onChange={e => setCount(Number(e.target.value))}\n            className=\"mt-3\"\n            placeholder=\"Количество игрушки в наличии\"\n            type=\"number\"\n          /> */}\n          <hr />\n          <Button\n            variant={\"outline-dark\"}\n            onClick={addInfo}\n          >\n            Добавить новую характеристику\n          </Button>\n          {info.map(i =>\n            <Row className=\"mt-4\" key={i.number}>\n              <Col md={4}>\n                <Form.Control\n                  value={i.title}\n                  onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                  placeholder=\"Название характеристики\"\n                />\n              </Col>\n              <Col md={4}>\n                <Form.Control\n                  value={i.description}\n                  onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                  placeholder=\"Описание характеристики\"\n                />\n              </Col>\n              <Col md={4}>\n                <Button\n                  onClick={() => removeInfo(i.number)}\n                  variant={\"outline-danger\"}\n                >\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          )}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n\nexport default CreateDevice;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/modals/CreateBrand.js",["258"],"import React, { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { createBrand, createType } from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({ show, onHide }) => {\n  const [value, setValue] = useState('')\n\n  const addBrand = () => {\n    createBrand({ name: value }).then(data => {\n      setValue('')\n      onHide()\n    })\n  }\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить фирму\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            placeholder={\"Новая фирма\"}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CreateBrand;\n","/home/tyhroilinux/Projects/FullStack/scubaShop/client/src/components/DeviceItem.js",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":20,"column":6,"nodeType":"265","endLine":20,"endColumn":8,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":26,"column":9,"nodeType":"269","messageId":"270","endLine":26,"endColumn":13},{"ruleId":"267","severity":1,"message":"271","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"272","line":12,"column":6,"nodeType":"265","endLine":12,"endColumn":8,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":43,"column":17,"nodeType":"276","endLine":43,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":43,"column":29,"nodeType":"276","endLine":43,"endColumn":96},{"ruleId":"274","severity":1,"message":"275","line":44,"column":17,"nodeType":"276","endLine":44,"endColumn":59},{"ruleId":"274","severity":1,"message":"275","line":47,"column":17,"nodeType":"276","endLine":47,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":47,"column":29,"nodeType":"276","endLine":47,"endColumn":96},{"ruleId":"274","severity":1,"message":"275","line":48,"column":17,"nodeType":"276","endLine":48,"endColumn":59},{"ruleId":"274","severity":1,"message":"275","line":51,"column":17,"nodeType":"276","endLine":51,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":51,"column":29,"nodeType":"276","endLine":51,"endColumn":96},{"ruleId":"274","severity":1,"message":"275","line":52,"column":17,"nodeType":"276","endLine":52,"endColumn":59},{"ruleId":"274","severity":1,"message":"275","line":55,"column":17,"nodeType":"276","endLine":55,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":55,"column":29,"nodeType":"276","endLine":55,"endColumn":96},{"ruleId":"274","severity":1,"message":"275","line":56,"column":17,"nodeType":"276","endLine":56,"endColumn":59},{"ruleId":"267","severity":1,"message":"279","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":11},{"ruleId":"267","severity":1,"message":"280","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":11},{"ruleId":"263","severity":1,"message":"281","line":23,"column":6,"nodeType":"265","endLine":23,"endColumn":8,"suggestions":"282"},{"ruleId":"263","severity":1,"message":"281","line":30,"column":6,"nodeType":"265","endLine":30,"endColumn":63,"suggestions":"283"},{"ruleId":"267","severity":1,"message":"284","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":11,"column":29,"nodeType":"287","messageId":"288","endLine":11,"endColumn":44},{"ruleId":"267","severity":1,"message":"280","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":11},{"ruleId":"267","severity":1,"message":"289","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":14},{"ruleId":"267","severity":1,"message":"290","line":5,"column":49,"nodeType":"269","messageId":"270","endLine":5,"endColumn":61},{"ruleId":"263","severity":1,"message":"281","line":22,"column":6,"nodeType":"265","endLine":22,"endColumn":8,"suggestions":"291"},{"ruleId":"267","severity":1,"message":"292","line":4,"column":23,"nodeType":"269","messageId":"270","endLine":4,"endColumn":33},{"ruleId":"259","replacedBy":"293"},{"ruleId":"261","replacedBy":"294"},{"ruleId":"263","severity":1,"message":"264","line":20,"column":6,"nodeType":"265","endLine":20,"endColumn":8,"suggestions":"295"},{"ruleId":"267","severity":1,"message":"296","line":6,"column":36,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"297","line":6,"column":48,"nodeType":"269","messageId":"270","endLine":6,"endColumn":60},{"ruleId":"267","severity":1,"message":"271","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"272","line":12,"column":6,"nodeType":"265","endLine":12,"endColumn":8,"suggestions":"298"},{"ruleId":"267","severity":1,"message":"268","line":26,"column":9,"nodeType":"269","messageId":"270","endLine":26,"endColumn":13},{"ruleId":"263","severity":1,"message":"281","line":23,"column":6,"nodeType":"265","endLine":23,"endColumn":8,"suggestions":"299"},{"ruleId":"263","severity":1,"message":"281","line":30,"column":6,"nodeType":"265","endLine":30,"endColumn":63,"suggestions":"300"},{"ruleId":"267","severity":1,"message":"284","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":11,"column":29,"nodeType":"287","messageId":"288","endLine":11,"endColumn":44},{"ruleId":"267","severity":1,"message":"280","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":13},{"ruleId":"267","severity":1,"message":"290","line":5,"column":49,"nodeType":"269","messageId":"270","endLine":5,"endColumn":61},{"ruleId":"267","severity":1,"message":"301","line":13,"column":10,"nodeType":"269","messageId":"270","endLine":13,"endColumn":15},{"ruleId":"267","severity":1,"message":"302","line":13,"column":17,"nodeType":"269","messageId":"270","endLine":13,"endColumn":25},{"ruleId":"263","severity":1,"message":"281","line":22,"column":6,"nodeType":"265","endLine":22,"endColumn":8,"suggestions":"303"},{"ruleId":"267","severity":1,"message":"292","line":4,"column":23,"nodeType":"269","messageId":"270","endLine":4,"endColumn":33},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["306"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'bigStar' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["307"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["308"],["309"],"'jwt_decode' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Card' is defined but never used.","'fetchDevices' is defined but never used.",["310"],"'createType' is defined but never used.",["304"],["305"],["311"],"'SHOP_ROUTE' is defined but never used.","'BASKET_ROUTE' is defined but never used.",["312"],["313"],["314"],"'count' is assigned a value but never used.","'setCount' is assigned a value but never used.",["315"],"no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"320","fix":"324"},{"desc":"316","fix":"325"},{"desc":"318","fix":"326"},{"desc":"320","fix":"327"},{"desc":"322","fix":"328"},{"desc":"320","fix":"329"},"Update the dependencies array to be: [user]",{"range":"330","text":"331"},"Update the dependencies array to be: [id]",{"range":"332","text":"333"},"Update the dependencies array to be: [device]",{"range":"334","text":"335"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"336","text":"337"},{"range":"338","text":"335"},{"range":"339","text":"331"},{"range":"340","text":"333"},{"range":"341","text":"335"},{"range":"342","text":"337"},{"range":"343","text":"335"},[684,686],"[user]",[468,470],"[id]",[854,856],"[device]",[1062,1119],"[device.page, device.selectedType, device.selectedBrand, device]",[934,936],[684,686],[468,470],[865,867],[1073,1130],[934,936]]